# This workflow will run a test suite.

name: Run Tests
on:
  pull_request:
    branches:
      - master

defaults:
  run:
    shell: bash

jobs:
  linting:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8
          flake8 --count --exit-zero --max-complexity=10 --max-line-length=96 --statistics
  tests:
    needs: linting
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        python-version: [ 3.9 ]
        os: [ ubuntu-latest, macOS-latest, windows-latest ]
      fail-fast: false
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/checkout@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Get full python version
        id: full-python-version
        run: |
          echo python -c "import sys; print('.'.join(str(v) for v in sys.version_info[:2]))"
          echo python -c "import sys; print(sys.executable)"

      - name: Set up Poetry
        run: |
          curl -sSL https://raw.githubusercontent.com/python-poetry/poetry/master/install-poetry.py | python3 - -y

      - name: Add poetry to path (Windows)
        if: ${{ matrix.os }} == "windows-latest"
        run: echo "$APPDATA\Python\Scripts" >> $GITHUB_PATH

      - name: Add poetry to path (MacOS)
        if: ${{ matrix.os }} == "macOS-latest"
        run: echo "$HOME/Library/Python/${{ matrix.python-version }}/bin" >> $GITHUB_PATH

      - name: Add poetry to path (Linux)
        if: ${{ matrix.os }} == "ubuntu-latest"
        run: echo "$HOME/.local/bin" >> $GITHUB_PATH

      - name: Configure poetry
        run: |
          poetry config virtualenvs.in-project true

      - name: Set up cache
        uses: actions/cache@v2
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}

      - name: Install dependencies
        run: poetry install

      - name: Test with pytest
        run: poetry run pytest tests/test_db_temperature_distribution.py -v
